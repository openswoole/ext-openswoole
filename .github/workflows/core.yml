name: core-openswoole

on:
  push:
  pull_request:
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    services:
      tinyproxy:
        image: "vimagick/tinyproxy"
        ports:
          - 8888:8888
      socks5:
        image: "xkuma/socks5"
        ports:
          - 1080:1080

    steps:
    - uses: actions/checkout@v4

    - name: install dependencies
      run: sudo apt update -y && sudo apt install -y googletest libgtest-dev redis-server libboost-stacktrace-dev libbrotli-dev

    - name: configure
      run: phpize && ./configure --enable-sockets --enable-mysqlnd --enable-http2 --enable-openssl

    - name: make
      run: cmake . -DCODE_COVERAGE=ON &&
           make VERBOSE=1 -j &&
           sudo make install

    - name: make test
      run: 
        cd core-tests && ./run.sh

#     - name: run coverage
#       shell: bash
#       run: sudo apt-get install lcov &&
#           sudo lcov --directory . --capture --output-file coverage.info &&
#           sudo lcov --remove coverage.info "${{runner.workspace}}/swoole-src/include/*" '/usr/*' --output-file coverage.info &&
#           sudo lcov --list coverage.info

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v1
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         files: ./coverage.info
#         fail_ci_if_error: true

    # - name: Publish Core Test Results
    #   if: always()
    #   uses: EnricoMi/publish-unit-test-result-action@v1
    #   with:
    #     check_name: Core Test Results
    #     files: core-tests/test-result.xml
